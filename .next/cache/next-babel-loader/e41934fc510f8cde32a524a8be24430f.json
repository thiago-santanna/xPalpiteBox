{"ast":null,"code":"import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport credentials from '../../credentials.json';\nimport moment from 'moment';\nconst doc = new GoogleSpreadsheet('1oDFsbvCF2fkkxmjMvC5K2i6Uld6YhA1HI9isZ8ZZLL4');\n\nconst genCupom = () => {\n  const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\n  return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4);\n};\n\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[1];\n    const data = JSON.parse(req.body);\n    const sheetConfig = doc.sheetsByIndex[2];\n    await sheetConfig.loadCells('A2:B2');\n    const mostraPromocaoCell = sheetConfig.getCell(1, 0);\n    const textoCell = sheetConfig.getCell(1, 1);\n    let Cupom = '';\n    let Promo = '';\n\n    if (mostraPromocaoCell.value === 'VERDADEIRO') {\n      Cupom = genCupom();\n      Promo = textoCell.value;\n    }\n\n    await sheet.addRow({\n      Nome: data.Nome,\n      Email: data.Email,\n      Whatsapp: data.Whatsapp,\n      Datapromo: moment().format('DD/MM/YYYY HH:mm:ss'),\n      Nota: 5,\n      Cupom,\n      Promo\n    });\n    res.end(req.body);\n  } catch (error) {\n    console.log(error);\n    res.end('error');\n  }\n});","map":{"version":3,"sources":["/home/thiago/Dev/DevPleno/semana-FSM/palpite-box/pages/api/save.js"],"names":["GoogleSpreadsheet","credentials","moment","doc","genCupom","code","parseInt","format","toString","toUpperCase","substr","req","res","useServiceAccountAuth","loadInfo","sheet","sheetsByIndex","data","JSON","parse","body","sheetConfig","loadCells","mostraPromocaoCell","getCell","textoCell","Cupom","Promo","value","addRow","Nome","Email","Whatsapp","Datapromo","Nota","end","error","console","log"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,GAAG,GAAG,IAAIH,iBAAJ,CAAsB,8CAAtB,CAAZ;;AAEA,MAAMI,QAAQ,GAAG,MAAK;AAClB,QAAMC,IAAI,GAAGC,QAAQ,CAACJ,MAAM,GAAGK,MAAT,CAAgB,iBAAhB,CAAD,CAAR,CAA6CC,QAA7C,CAAsD,EAAtD,EAA0DC,WAA1D,EAAb;AACA,SAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,IAAmB,GAAnB,GAAyBL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzB,GAA4C,GAA5C,GAAkDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzD;AACH,CAHD;;AAKA,gBAAe,OAAMC,GAAN,EAAWC,GAAX,KAAmB;AAC9B,MAAI;AACA,UAAMT,GAAG,CAACU,qBAAJ,CAA0BZ,WAA1B,CAAN;AACA,UAAME,GAAG,CAACW,QAAJ,EAAN;AACA,UAAMC,KAAK,GAAGZ,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAAd;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,IAAf,CAAb;AAEA,UAAMC,WAAW,GAAGlB,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMK,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AAEA,UAAMC,kBAAkB,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA3B;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AAEA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAGJ,kBAAkB,CAACK,KAAnB,KAA6B,YAAhC,EAA6C;AACzCF,MAAAA,KAAK,GAAGtB,QAAQ,EAAhB;AACAuB,MAAAA,KAAK,GAAGF,SAAS,CAACG,KAAlB;AACH;;AAED,UAAMb,KAAK,CAACc,MAAN,CAAa;AACfC,MAAAA,IAAI,EAAEb,IAAI,CAACa,IADI;AAEfC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAFG;AAGfC,MAAAA,QAAQ,EAAEf,IAAI,CAACe,QAHA;AAIfC,MAAAA,SAAS,EAAE/B,MAAM,GAAGK,MAAT,CAAgB,qBAAhB,CAJI;AAKf2B,MAAAA,IAAI,EAAE,CALS;AAMfR,MAAAA,KANe;AAOfC,MAAAA;AAPe,KAAb,CAAN;AASAf,IAAAA,GAAG,CAACuB,GAAJ,CAAQxB,GAAG,CAACS,IAAZ;AACH,GA7BD,CA6BE,OAAOgB,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAxB,IAAAA,GAAG,CAACuB,GAAJ,CAAQ,OAAR;AACH;AACJ,CAlCD","sourcesContent":["import { GoogleSpreadsheet } from 'google-spreadsheet'\nimport credentials from '../../credentials.json'\nimport moment from 'moment'\n\nconst doc = new GoogleSpreadsheet('1oDFsbvCF2fkkxmjMvC5K2i6Uld6YhA1HI9isZ8ZZLL4')\n\nconst genCupom = () =>{\n    const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase()\n    return code.substr(0,4) + '-' + code.substr(4,4) + '-' + code.substr(8,4)\n}\n\nexport default async(req, res) => {\n    try {    \n        await doc.useServiceAccountAuth(credentials)\n        await doc.loadInfo()            \n        const sheet = doc.sheetsByIndex[1]\n        const data = JSON.parse(req.body)\n\n        const sheetConfig = doc.sheetsByIndex[2]\n        await sheetConfig.loadCells('A2:B2')\n    \n        const mostraPromocaoCell = sheetConfig.getCell(1, 0)    \n        const textoCell = sheetConfig.getCell(1, 1)\n\n        let Cupom = ''\n        let Promo = ''\n        if(mostraPromocaoCell.value === 'VERDADEIRO'){\n            Cupom = genCupom()\n            Promo = textoCell.value  \n        }\n\n        await sheet.addRow({\n            Nome: data.Nome,\n            Email: data.Email,\n            Whatsapp: data.Whatsapp,\n            Datapromo: moment().format('DD/MM/YYYY HH:mm:ss'),\n            Nota: 5,\n            Cupom,\n            Promo\n        })\n        res.end(req.body)\n    } catch (error) {\n        console.log(error)   \n        res.end('error')\n    }\n}\n"]},"metadata":{},"sourceType":"module"}